environment:
  PYTHON: "C:\\Python35-x64"
  ARCH: amd64
  # Note: You can't set empty environment variables on Windows,
  #       c.f. https://github.com/huonw/travis-cargo/issues/33
  TRAVIS_CARGO_NIGHTLY_FEATURE: ""
  matrix:
    # There is no rust-stable-$TARGET.exe!
    - TARGET: x86_64-pc-windows-msvc
      BRANCH: stable
      VS: C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat
    - TARGET: x86_64-pc-windows-msvc
      BRANCH: beta
      VS: C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat
    # Note: See issue with TRAVIS_CARGO_NIGHTLY_FEATURE above
    # - TARGET: x86_64-pc-windows-msvc
    #   BRANCH: nightly
    #   VS: C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat
    - TARGET: x86_64-pc-windows-gnu
      MSYS_BITS: 64
      BRANCH: stable

cache:
  - "%USERPROFILE%\\.cargo"
  - target

install:
  # Rust
  - ps: Start-FileDownload "https://static.rust-lang.org/rustup/dist/i686-pc-windows-gnu/rustup-init.exe"
  - rustup-init.exe -y --default-toolchain="%BRANCH%-%TARGET%"
  - set PATH=%PATH%;%HOMEPATH%\.cargo\bin
  - if defined VS call "%VS%" %ARCH%
  - if defined MSYS_BITS set PATH=%PATH%;C:\msys64\mingw%MSYS_BITS%\bin;C:\msys64\usr\bin

  # What are we building with?
  - where rustc cargo cl gcc
  - rustc -vV
  - cargo -vV

  # travis-cargo
  # Note: Where do --user binaries end up? Installing globally for now
  - "%PYTHON%\\python.exe -m pip install travis-cargo^<0.2"
  - set PATH=%PATH%;%PYTHON%\Scripts

build: off

test_script:
  - "%CMD_IN_ENV% travis-cargo.exe build -- --release"
  - "%CMD_IN_ENV% travis-cargo.exe --only nightly test -- --release"
  - "%CMD_IN_ENV% travis-cargo.exe --only stable doc -- --release"
  - "%CMD_IN_ENV% travis-cargo.exe bench"

after_test:
  # Build lorem-ipsum example to distribute as an artifact
  - "%CMD_IN_ENV% travis-cargo.exe build -- --release --example lorem-ipsum"

artifacts:
  - path: target\release\examples\lorem-ipsum.exe
    name: lorem-ipsum
