name: CI

on:
  push:
  pull_request:
  workflow_dispatch:
  merge_group:
    types: [checks_requested]
  schedule:
    # Runs at 02:30, every Saturday
    - cron: "30 2 * * 6"
    
    
jobs:
  Test:
    strategy:
      fail-fast: false
      matrix:
        toolchain: [stable, nightly]
        platform:
          # native targets
          - { target: aarch64-apple-darwin, os: macos-14, native: true }
          - { target: x86_64-apple-darwin, os: macos-13, native: true }
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest, native: true }
          - { target: x86_64-pc-windows-msvc, os: windows-latest, native: true }
          # arm64 linux
          - { target: aarch64-unknown-linux-gnu, os: ubuntu-latest, native: false }
          # all servo's android targets
          - { target: aarch64-linux-android, os: ubuntu-latest, native: false }
          - { target: armv7-linux-androideabi, os: ubuntu-latest, native: false }
          - { target: i686-linux-android, os: ubuntu-latest, native: false }
          - { target: x86_64-linux-android, os: ubuntu-latest, native: false }
    runs-on: ${{ matrix.platform.os }}
    env:
      HARFBUZZ_SYS_NO_PKG_CONFIG: true
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.platform.target }}
      - uses: libsdl-org/setup-sdl@main
        if: ${{ matrix.platform.os == 'windows-latest' }}
        with:
          install-linux-dependencies: true
          add-to-environment: true
          version: 2-latest
          version-sdl-image: 2-latest
      - name: Install packages
        if: ${{ matrix.platform.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y libegl1-mesa-dev libgtk-3-dev libsdl2-dev cmake

      - name: Build simd
        if: ${{ !matrix.platform.native }}
        run: cargo build --target ${{ matrix.platform.target }}
        working-directory: simd

      - name: Build geometry
        if: ${{ !matrix.platform.native }}
        run: cargo build --target ${{ matrix.platform.target }}
        working-directory: geometry

      - name: Build
        if: ${{ matrix.platform.native }}
        run: cargo build --target ${{ matrix.platform.target }}

      - name: Test
        if: ${{ matrix.platform.native }}
        run: cargo test

  build_result:
    name: Result
    runs-on: ubuntu-latest
    needs:
      - "Test"
    steps:
      - name: Mark the job as successful
        run: exit 0
        if: success()
      - name: Mark the job as unsuccessful
        run: exit 1
        if: "!success()"
